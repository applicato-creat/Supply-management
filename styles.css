// Function to add items from the textarea
function addItems() {
    const input = document.getElementById("itemInput").value.trim();
    if (!input) return;

    const shortageList = document.getElementById("shortageList");
    const items = input.split("\n");

    items.forEach(item => {
        if (item) {
            const [name, quantity] = item.split(",");
            const li = document.createElement("li");
            li.innerHTML = `${name || "Unknown Item"} - Qty: ${quantity || "N/A"} 
                <button onclick="markAsReceived(this)">Mark as Received</button>`;
            li.dataset.name = name.trim(); // Store item name for matching
            shortageList.appendChild(li);
        }
    });

    document.getElementById("itemInput").value = "";
}

// Function to mark an item as received and move it to the received list
function markAsReceived(button) {
    const li = button.parentElement;
    const receivedList = document.getElementById("receivedList");
    
    li.removeChild(button);
    receivedList.appendChild(li);
}

// Function to process uploaded invoice image
async function processInvoiceImage() {
    const fileInput = document.getElementById("invoiceImage");
    const file = fileInput.files[0];
    if (!file) {
        alert("Please upload an invoice image first!");
        return;
    }

    const shortageList = document.getElementById("shortageList");
    const items = shortageList.getElementsByTagName("li");

    // Use Tesseract.js to extract text from the image
    const { data: { text } } = await Tesseract.recognize(file, "eng");
    const invoiceItems = text.split("\n").map(line => line.split(",").map(item => item.trim()));

    // Match invoice items with shortage list and mark as received
    for (let invoiceItem of invoiceItems) {
        const [name] = invoiceItem; // Assuming name is the first part
        for (let item of items) {
            if (item.dataset.name === name) {
                markAsReceived(item.querySelector("button"));
                break;
            }
        }
    }

    alert("Invoice processed and matched items marked as received!");
    fileInput.value = ""; // Clear file input
}

// WhatsApp integration (simulated - requires server-side setup for real integration)
function sendToWhatsApp() {
    const fileInput = document.getElementById("invoiceImage");
    const file = fileInput.files[0];
    if (file) {
        const url = URL.createObjectURL(file);
        const whatsappLink = `https://wa.me/?text=Check%20out%20this%20invoice:%20${encodeURIComponent(url)}`;
        window.open(whatsappLink, "_blank");
    } else {
        alert("Please upload an invoice image to share!");
    }
}

// Add event listener for WhatsApp sharing (optional button can be added in HTML)
document.getElementById("processInvoiceImage")?.addEventListener("click", () => {
    processInvoiceImage();
    sendToWhatsApp(); // Share to WhatsApp after processing
});
